[tool:pytest]
# pytest配置文件

# 测试发现
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# 输出配置
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --durations=10
    --color=yes
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=60
    --cov-branch
    --no-cov-on-fail

# 覆盖率配置
[coverage:run]
source = indexer,common,api,cli
omit = 
    */tests/*
    */migrations/*
    */dex_events_env/*
    */.venv/*
    */venv/*
    setup.py
    conftest.py

[coverage:report]
# 跳过覆盖率为100%的文件
skip_covered = False
# 显示缺失的行
show_missing = True
# 精度
precision = 2
# 排除的行
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# 测试标记定义
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    database: marks tests that require database
    network: marks tests that require network access
    redis: marks tests that require Redis
    
    # 已有的标记
    serial: run this test in single thread
    indexer: Tests related to indexer
    indexer_exporter: Tests related to the indexer exporter
    indexer_utils: Tests related to the indexer utils
    indexer_bridge: Tests related to the indexer bridge
    indexer_bridge_optimism: Tests related to the indexer bridge optimism
    indexer_bridge_arbitrum: Tests related to the indexer bridge arbitrum
    indexer_jobs: Tests related to the indexer jobs
    indexer_jobs_user_ops: Tests related to the indexer jobs user ops
    indexer_address_index: Tests related to the indexer address index
    explorer_api: Test explorer related API
    indexer_jobs_day_mining: Tests related to the indexer day mining
    ens: Tests related to the indexer ENS
    pipeline: Continuous Integration

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 过滤警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:flask_cors.*
    ignore::UserWarning:pandas.*

# 最小pytest版本
minversion = 7.0